parameters:
  - name: PublishNuget
    type: boolean
    default: false
  - name: PackageVersion
    type: string
    default: 0.1.0-$(Build.BuildNumber)

jobs: 
- job: NativeRuntime
  displayName: Build Native Runtime
  pool:
    name: BuildXL-DevOpsAgents-Linux-PME

  variables:
    skipComponentGovernanceDetection: true # done elsewhere (in the main rolling pipeline)
    Bxl.PackageName: runtime.linux-x64.BuildXL

  steps:
  - checkout: self
    fetchDepth: 1

  - bash: |
      set -euo pipefail
      if ! which docker; then
        curl -fsSL https://get.docker.com | sudo sh 
        sudo usermod -aG docker $USER
      fi
    displayName: Setup Docker

  - bash: |
      set -eu
      cd Public/Src/Sandbox/Linux
      bash build-manylinux.sh
    displayName: Build Native

  - ${{ if parameters.PublishNuget }}:
    - template: step-nuget-config.yml
    - bash: |
        set -eu
        readonly PackageDirName="$(Bxl.PackageName).${{ parameters.PackageVersion }}"

        cd $(Build.ArtifactStagingDirectory)
        mkdir -p "${PackageDirName}"
        cd "${PackageDirName}"
        mkdir -p runtimes/linux-x64/native
        cp -r $(Build.SourcesDirectory)/Public/Src/Sandbox/Linux/bin/* runtimes/linux-x64/native
        cat > "$(Bxl.PackageName).nuspec" << __EOF__
        <?xml version="1.0" encoding="utf-8"?>
        <package xmlns="http://schemas.microsoft.com/packaging/2013/01/nuspec.xsd">
          <metadata minClientVersion="2.12">
            <id>$(Bxl.PackageName)</id>
            <version>${{ parameters.PackageVersion }}</version>
            <title>$(Bxl.PackageName)</title>
            <authors>Microsoft</authors>
            <owners>microsoft,buildxl,bxl</owners>
            <requireLicenseAcceptance>false</requireLicenseAcceptance>
            <description>The BuildXL runtime libraries for Linux.</description>
            <copyright>Â© Microsoft Corporation. All rights reserved.</copyright>
            <serviceable>true</serviceable>
          </metadata>
        </package>
        __EOF__
        cat "$(Bxl.PackageName).nuspec" 
        mono "$(Build.SourcesDirectory)/Shared/Tools/NuGet.exe" pack -OutputDirectory ..
        cd ..
        mono "$(Build.SourcesDirectory)/Shared/Tools/NuGet.exe" push "${PackageDirName}.nupkg" -Source "$(Feed-BuildXL.Selfhost)" -ApiKey "AzureDevOps"
      displayName: Nuget Pack and Push

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: $(Build.SourcesDirectory)/Public/Src/Sandbox/Linux/bin
      artifactName: bxl-libDetours.$(System.JobAttempt)
    condition: always()
    continueOnError: true