trigger: none  # Explicitly scheduled for PRs

variables:
  - group: "BuildXL Secrets"
  - group: "BuildXL Common variables"
  - name: BuildXL.LogsDirectory.LKG
    value: $(Build.SourcesDirectory)\Out\Logs\pr-$(Build.BuildNumber)-lkg
  - name: BuildXL.LogsDirectory
    value: $(Build.SourcesDirectory)\Out\Logs\pr-$(Build.BuildNumber)
  - name: BuildXL.PreReleaseTag
    value: pr.public.win
  - name: BuildXL.SemanticVersion
    value: 0.0.$(Build.BuildNumber)
  - name: BuildXL.Configuration
    value: Release
  - name: BuildXL.PackageName 
    value: BuildXL.win-x64
  - name: BuildXL.DropPath
    value: $(Agent.TempDirectory)\Drops\BuildXLDrop
  - name: CloudBuild.DropPath
    value: $(Agent.TempDirectory)\Drops\CloudBuildDrop
  - name: Guardian.DropPath
    value: $(Agent.TempDirectory)\Drops\GuardianDrop
  - name: ComplianceBuild.LogsDirectory
    value: $(Build.SourcesDirectory)\Out\Logs\ComplianceBuild-$(Build.BuildNumber)
jobs:
- job: Compliance_Build
  displayName: Compliance Build
  timeoutInMinutes: 120
  cancelTimeoutInMinutes: 1
  pool:
    name: BuildXL-DevOpsAgents-PME
  steps:
  - checkout: self
    fetchDepth: 1

  - template: ../common/set-artifacts-pat.yml
    parameters:
      AzDevPAT: $(PAT-TseBuild-AzureDevOps-CloudBuild)

  # Download BuildXL drop
  - task: artifactDropDownloadTask@1
    displayName: Download BuildXL drop
    inputs:
      dropServiceURI: https://cloudbuild.artifacts.visualstudio.com/DefaultCollection
      buildNumber: buildxl.candidate.19779723
      destinationPath: $(BuildXL.DropPath)
      rootPaths: release/win-x64
      usePat: false
      
  # Download CloudBuild Drop
  - task: artifactDropDownloadTask@0
    displayName: Download CloudBuild drop
    inputs:
      dropServiceURI: https://cloudbuild.artifacts.visualstudio.com/DefaultCollection
      buildNumber: CloudBuild.GIT/4f4758ef15b9cb205148c1aaffae94139cb26149/75f433b3-760a-20d0-ca5e-6cc7a2f0c39e
      destinationPath: $(CloudBuild.DropPath)
      rootPaths: retail/amd64/App/BuildRunners/GenericBuildRunner/BuildXLRunner/ComplianceBuildConfig
      usePat: false
  
  # Download Guardian Drop
  - task: artifactDropDownloadTask@0
    displayName: Download Guardian drop
    inputs:
      dropServiceURI: https://cloudbuild.artifacts.visualstudio.com/DefaultCollection
      buildNumber: Cloudbuild/GuardianDrops/287571
      destinationPath: $(Guardian.DropPath)
      rootPaths: Guardian
      usePat: false
      
   # Copy compliance config to source repo and run compliance build
  - task: CmdLine@2
    displayName: Copy Compliance config to source
    inputs:
      script: |
        xcopy $(CloudBuild.DropPath)\retail\amd64\App\BuildRunners\GenericBuildRunner\BuildXLRunner\ComplianceBuildConfig $(Build.SourcesDirectory)\ /E/H/Y

  - task: PowerShell@1
    displayName: Write Cache Configure file for Compliance build
    inputs:
      scriptType: 'inlineScript'
      inlineScript: |
        New-Item -Path '$(Build.SourcesDirectory)\Out' -ItemType Directory
        $content = @"
        {
              "RemoteIsReadOnly": false,
              "SkipDeterminismRecovery":  true,
              "RemoteConstructionTimeoutMilliseconds":  10000,
              "Assembly":  "BuildXL.Cache.VerticalAggregator",
              "Type":  "BuildXL.Cache.VerticalAggregator.VerticalCacheAggregatorFactory",
              "RemoteCache": {
                                  "CacheServiceFingerprintEndpoint":  "https://mseng.artifacts.visualstudio.com/DefaultCollection",
                                  "RequiredContentKeepUntilHours":  1,
                                  "Assembly":  "BuildXL.Cache.BuildCacheAdapter",
                                  "CacheServiceContentEndpoint":  "https://mseng.vsblob.visualstudio.com/DefaultCollection",
                                  "Type":  "BuildXL.Cache.BuildCacheAdapter.BuildCacheFactory",
                                  "CacheLogPath":  "[BuildXLSelectedLogPath].Remote.log",
                                  "CacheId":  "ComplianceL3Cache",
                                  "CacheNamespace":  "ComplianceBuild.Internal.PR",
                                  "UseBlobContentHashLists":  true
                              },
              "LocalCache":  {
                                "MaxCacheSizeInMB":  20240,
                                "Assembly":  "BuildXL.Cache.MemoizationStoreAdapter",
                                "UseStreamCAS":  true,
                                "Type":  "BuildXL.Cache.MemoizationStoreAdapter.MemoizationStoreCacheFactory",
                                "CacheLogPath":  "[BuildXLSelectedLogPath]",
                                "CacheRootPath":  "[BuildXLSelectedRootPath]",
                                "CacheId":  "ComplianceBuildCS2L1",
                                "UseRocksDbMemoizationStore":  true
                            }
              }
        "@
        Set-Content -Path $(Build.SourcesDirectory)\Out\CacheConfig.json -Value $content

  - task: CmdLine@2
    displayName: Run Compliance Build
    inputs:
      script: $(BuildXL.DropPath)\release\win-x64\RunInSubst.exe B=$(Build.SourcesDirectory) $(BuildXL.DropPath)\release\win-x64\bxl.exe /c:B:\complianceConfig.dsc /server- /cachemiss:[BxlPrComplianceBuild] /p:[Sdk.BuildXL]microsoftInternal=1 /enableLazyOutputs:Minimal /p:[Tool.Guardian]enabledTools=credscan,policheck /p:TOOLPATH_GUARDIAN=$(Guardian.DropPath)\Guardian /p:BUILDXL_ENLISTMENT_ROOT=B:\ /p:BUILDXL_ENLISTMENT_DATA_DIR=B:\EnlistmentData /logsDirectory:$(ComplianceBuild.LogsDirectory) /cacheConfigFilePath:B:\Out\CacheConfig.json /substTarget:B:\ /substSource:$(Build.SourcesDirectory) /verifyJournalForEngineVolumes- /logOutput:fulloutputalways /p:[Tool.Guardian]complianceLogLevel=Trace

    env:
      VSTSPERSONALACCESSTOKEN: $(PAT-TseBuild-AzureDevOps-mseng-buildcache)
      
 # Publish compliance build logs
  - task: PublishPipelineArtifact@0
    displayName: Upload compliance build logs
    condition: always()
    continueOnError: True
    inputs:
      artifactName: compliance.build.logs.$(BuildXL.PackageName)-$(BuildXL.Configuration).$(Build.BuildNumber).$(System.JobAttempt)
      targetPath: $(ComplianceBuild.LogsDirectory)

- job: Public_Validation
  displayName: Public PR Validation
  timeoutInMinutes: 120
  cancelTimeoutInMinutes: 1
  pool:
    name: BuildXL-DevOpsAgents-PME
  steps:
  - checkout: self
    fetchDepth: 1

  - template: ../common/journaling.yml # Enable journaling

  # Step 1. Build bits and deploy to dev
  - task: PowerShell@2
    displayName: Build BuildXL and deploy to Dev
    inputs:
      targetType: filePath
      filePath: ./RunBxlWithPat.ps1
      arguments: -minimal -deploy Dev -deployconfig Release -OneEsPat $(PAT-TseBuild-AzureDevOps-1esSharedAssets-Package-Read) -CbPat $(PAT-TseBuild-AzureDevOps-CloudBuild-Packaging-Read) -MsEngGitPat $(PAT-TseBuild-AzureDevOps-MsEng-ReadCode) -VstsPat $(PAT-TseBuild-AzureDevOps-mseng-buildcache) -CacheNamespace BuildXL.Public -SharedCacheMode ConsumeAndPublish /p:[Sdk.BuildXL]microsoftInternal=1 /q:ReleaseDotNet6 /p:[BuildXL.Branding]SemanticVersion=$(BuildXL.SemanticVersion) /p:[BuildXL.Branding]PrereleaseTag=$(BuildXL.PreReleaseTag) /server- /logOutput:FullOutputOnWarningOrError /traceInfo:prvalidation=Public /ado /scrubDirectory:Out\objects /logsDirectory:$(BuildXL.LogsDirectory.LKG) /cachemiss:[BxlPublicValidation]

  - task: PublishPipelineArtifact@1
    displayName: Upload cache miss log
    condition: succeededOrFailed()
    continueOnError: True
    inputs:
      path: $(BuildXL.LogsDirectory.LKG)\BuildXL.CacheMiss.log
      artifactName: Cache miss analysis for LKG bootstrap build  

  # Step 2. Build microsoftInternal=0 using the built bits
  - template: ../common/set-msvc-version.yml

  - task: CmdLine@2
    displayName: Run bxl.cmd -Use Dev (microsoftInternal=0) 
    inputs:
      script: 'bxl.cmd -Use Dev -UseBlobL3 -SharedCacheMode ConsumeAndPublish -CacheNamespace BuildXL.Public.Validation /p:[Sdk.BuildXL]microsoftInternal=0 /server- /ado /q:$(BuildXL.Configuration)DotNet6 /q:$(BuildXL.Configuration)DotNetCoreMac /logOutput:FullOutputOnWarningOrError /p:RetryXunitTests=1 /processRetries:3 /traceInfo:prvalidation=PublicLKG /p:xunitSemaphoreCount=12 /logsDirectory:$(BuildXL.LogsDirectory) /scrubDirectory:Out\objects /pipTimeoutMultiplier:2'

  - task: PublishPipelineArtifact@0
    displayName: Upload logs
    condition: always()
    continueOnError: True
    inputs:
      artifactName: buildxl-public-lkg.logs.$(BuildXL.PackageName)-$(BuildXL.Configuration).$(Build.BuildNumber).$(System.JobAttempt)
      targetPath: $(BuildXL.LogsDirectory)
...
