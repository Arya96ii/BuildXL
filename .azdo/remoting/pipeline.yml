parameters:
  # - name: AnyBuildSource
  #   type: string
  #   default: 'https://anybuildbxl1westus2.blob.core.windows.net/clientreleases'
  #   default: 'https://anybuild.azureedge.net/clientreleases'
  - name: BuildXLArguments
    type: string
    default: '/numRemoteAgentLeases:24 /remotingThresholdMultiplier:1.25 /p:[Sdk.BuildXL]microsoftInternal=1 /p:BUILDXL_FINGERPRINT_SALT=*'
  - name: AnyBuildArguments
    type: string
    default: '--NoCheckForUpdates'

trigger: none

pool:
  name: BuildXL-DevOpsAgents-PME

variables:
  NugetCredentialProviderPath: '$(Build.SourcesDirectory)\Public\Src\Tools\BuildXL.Tools.CredentialProvider\bin\Debug\netcoreapp2.1\win-x64'
  # AnyBuild.json
  # {
  #  "DefaultClusterUri": "https://westus2.anybuild.microsoft.com/clusters/5cff1ffe-c438-4382-be19-140c0cd893ae",
  #  "DefaultClusterName": "BuildXL1"
  # }
  # AnyBuild.json
  # {
  #  "DefaultClusterUri": "https://westus2.anybuild-test.microsoft.com/clusters/07F427C5-7979-415C-B6D9-01BAD5118191",
  #  "DefaultClusterName": "Bxl1"
  # }
  CommonArgs: '-OneEsPat $(PAT-TseBuild-AzureDevOps-1esSharedAssets-Package-Read) -CbPat $(PAT-TseBuild-AzureDevOps-CloudBuild-Packaging-Read) -NcPath $(NugetCredentialProviderPath) -MsEngGitPat $(PAT-TseBuild-AzureDevOps-MsEng-ReadCode)'
  BootstrapArgs: '-Minimal -Deploy Dev /p:[Sdk.BuildXL]microsoftInternal=1'
  AnyBuildAuthArgs: '--ClientApplicationId~~$(BuildXLPipelinesAppId)~~--ClientSecretEnvironmentVariable~~AnyBuildServicePrincipalPasswd'
  RemotingArgs: '-Use Dev -Minimal -EnableProcessRemoting /p:BUILDXL_ANYBUILD_EXTRA_ARGS=$(AnyBuildAuthArgs)~~${{ parameters.AnyBuildArguments }} ${{ parameters.BuildXLArguments }}' 

steps:

- checkout: self
  fetchDepth: 1

- template: ./az-login.yml

- script: 'C:\windows\system32\fsutil usn createjournal m=0x20000000 a=0x8000000 D:'
  displayName: 'Enable Journaling for D drive'

- script: |
   if EXIST %AppData%\NuGet\NuGet.Config (
       del %AppData%\NuGet\NuGet.Config
   )
  displayName: 'Nuget Hack: delete old nuget.config first'

- task: UseDotNet@2
  displayName: 'Use .NET Core sdk 6.x'
  inputs:
    version: 6.x

- task: DotNetCoreCLI@2
  displayName: 'Build BuildXL.Tools.CredentialProvider'
  inputs:
    projects: '$(Build.SourcesDirectory)\Public\Src\Tools\BuildXL.Tools.CredentialProvider\BuildXL.Tools.CredentialProvider.csproj'
    arguments: '-r win-x64'

- powershell: |
    Remove-Item -Force -Recurse "$env:LOCALAPPDATA\Microsoft\AnyBuild" -ea SilentlyContinue
  failOnStderr: true
  displayName: 'Remove existing AnyBuild client'
  continueOnError: false

- task: BatchScript@1
  displayName: 'Kill existing BuildXL processes'
  inputs:
    filename: Shared/Scripts/KillBxlInstancesInRepo.cmd
  continueOnError: true
  condition: always()

- task: PowerShell@2
  displayName: 'Build BXL (bootstrap)'
  inputs:
    targetType: filePath
    filePath: '$(Build.SourcesDirectory)\RunBxlWithPAT.ps1'
    arguments: '$(CommonArgs) $(BootstrapArgs)'

- task: PowerShell@2
  displayName: 'Run BXL with remoting'
  inputs:
    targetType: filePath
    filePath: '$(Build.SourcesDirectory)\RunBxlWithPAT.ps1'
    arguments: '$(CommonArgs) $(RemotingArgs)'
  env:
    AnyBuildServicePrincipalPasswd: $(AzureApp-BuildXL-Pipelines)

- task: BatchScript@1
  displayName: 'Kill existing BuildXL processes'
  inputs:
    filename: Shared/Scripts/KillBxlInstancesInRepo.cmd
  continueOnError: true
  condition: always()

- task: PublishPipelineArtifact@1
  displayName: 'Upload logs'
  inputs:
    targetPath: '$(Build.SourcesDirectory)\Out\Logs'
  condition: always()

- template: ./validate.yml
  parameters:
    LogDirectory: '$(Build.SourcesDirectory)\Out\Logs'

