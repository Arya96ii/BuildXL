Transformer.sealSourceDirectory({root: d`./src/userprofile`, include: "topDirectoryOnly"});
Transformer.execute({
    tool: {exe: f`\${Context.getMount('Windows').path}/System32/Robocopy.exe`},
    arguments: {
        escaping: "CRuntimeArgumentRules",
        separator: " ",
        items: [
            p`./src/userprofile`,
            p`./obj_test/k/w/6k5ykzrovlnle3hdbgx4lv7q/userprofile`,
            "*.npmrc",
            "/NJH",
            "/NFL",
            "/NP",
            "/MT",
        ],
    },
    workingDirectory: d`./obj_test/k/w/6k5ykzrovlnle3hdbgx4lv7q/userprofile`,
    dependencies: [f`\${Context.getMount('Windows').path}/System32/Robocopy.exe`, d`./src/userprofile`],
    implicitOutputs: [d`./obj_test/k/w/6k5ykzrovlnle3hdbgx4lv7q/userprofile`],
    successExitCodes: [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
    ],
    unsafe: {
        untrackedScopes: [
            p`\${Context.getMount('Windows').path}`,
            p`\${Context.getMount('InternetCache').path}`,
            p`\${Context.getMount('InternetHistory').path}`,
            p`\${Context.getMount('ProgramFiles').path}/Windows Defender`,
            p`\${Context.getMount('ProgramFilesX86').path}/Windows Defender`,
            p`\${Context.getMount('ProgramData').path}/Microsoft/Windows Defender`,
        ],
    },
});
Transformer.sealSharedDynamicDirectory({root: d`./obj_test/k/w/6k5ykzrovlnle3hdbgx4lv7q/userprofile`});
Transformer.execute({
    tool: {exe: f`./path/to/rush`},
    arguments: {
        escaping: "CRuntimeArgumentRules",
        separator: " ",
        items: [
            {
                escaping: "NoEscaping",
                separator: "",
                items: ["install"],
            },
        ],
    },
    workingDirectory: d`./Out/src`,
    dependencies: [f`./path/to/rush`, d`./obj_test/k/w/6k5ykzrovlnle3hdbgx4lv7q/userprofile`],
    implicitOutputs: [d`./obj_test/k/w/6k5ykzrovlnle3hdbgx4lv7q/userprofile`, d`./Out/src`],
    environmentVariables: [
        {name: "APPDATA", isPassThrough: true},
        {name: "HOMEDRIVE", isPassThrough: true},
        {name: "HOMEPATH", isPassThrough: true},
        {name: "INETCOOKIES", isPassThrough: true},
        {name: "INTERNETCACHE", isPassThrough: true},
        {name: "INTERNETHISTORY", isPassThrough: true},
        {name: "LOCALAPPDATA", isPassThrough: true},
        {name: "LOCALLOW", isPassThrough: true},
        {name: "NO_UPDATE_NOTIFIER", value: "1"},
        {name: "PATH", value: [p`./path/to`, p`\${Context.getMount('Windows').path}/System32/windowspowershell/v1.0`]},
        {name: "RUSH_ABSOLUTE_SYMLINKS", value: "FALSE"},
        {name: "RUSH_PNPM_STORE_PATH", value: p`./Out/path/to/pnpm/store`},
        {name: "USERNAME", isPassThrough: true},
        {name: "USERPROFILE", value: p`./obj_test/k/w/6k5ykzrovlnle3hdbgx4lv7q/userprofile`},
    ],
    unsafe: {untrackedScopes: [p`./Out/path/to/pnpm/store`, p`./Out/src/.git`]},
    allowUndeclaredSourceReads: true,
    allowedSurvivingChildProcessNames: [a`node.exe`],
});
Transformer.sealSharedDynamicDirectory({root: d`./obj_test/k/w/6k5ykzrovlnle3hdbgx4lv7q/userprofile`});
Transformer.sealSharedDynamicDirectory({root: d`./Out/src`});